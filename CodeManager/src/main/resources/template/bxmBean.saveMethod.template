	@BxmCategory(logicalName = "#{rvMethodLogicalName}", description = "#{rvMethodDescription}")
	#{rvBcModf} #{rvOutputType} #{rvMethodName}(#{rvInputType} #{rvInputVariable}) throws KaitApplicationException {
		logger.debug("[START] #{rvMethodName}");

		if(#{rvInputVariable} == null) {
			//메시지코드 결정후 일괄치환
			throw new KaitApplicationException("", new Object[]{"#{rvInputVariable}", "Input parameter is null"});
		}
		logger.debug("- #{rvDeleteInFieldVar}: {}", (#{rvInputVariable}.get#{rvDeleteInFieldVar}() != null ? #{rvInputVariable}.get#{rvDeleteInFieldVar}().size() : 0));
		logger.debug("- #{rvUpdateInFieldVar}: {}", (#{rvInputVariable}.get#{rvUpdateInFieldVar}() != null ? #{rvInputVariable}.get#{rvUpdateInFieldVar}().size() : 0));
		logger.debug("- #{rvInsertInFieldVar}: {}", (#{rvInputVariable}.get#{rvInsertInFieldVar}() != null ? #{rvInputVariable}.get#{rvInsertInFieldVar}().size() : 0));

		/** ### Output Variable ### */
		#{rvOutputType} #{rvOutputVariable} = null;
		Integer cudCount = 0;
		Integer deleteCount = 0;
		Integer updateCount = 0;
		Integer insertCount = 0;

		/** ### Callee Initialize ### */
#{rvCalleeInit}

		/** ### Execute Callee ### */
		// delete
		if(#{rvInputVariable}.get#{rvDeleteInFieldVar}() != null) {
			for(#{rvInputType} item : #{rvInputVariable}.get#{rvDeleteInFieldVar}()) {
				/** ### Execute Delete ### */
				deleteCount = deleteCount + #{rvDeleteExecuteCode}
			}
		}
		logger.debug("- #{rvMethodName} delete count: {}", deleteCount);

		// update
		if(#{rvInputVariable}.get#{rvUpdateInFieldVar}() != null) {
			for(#{rvInputType} item : #{rvInputVariable}.get#{rvUpdateInFieldVar}()) {
				/** ### Execute Update ### */
				updateCount = updateCount + #{rvUpdateExecuteCode}
			}
		}
		logger.debug("- #{rvMethodName} update count: {}", updateCount);

		// insert
		if(#{rvInputVariable}.get#{rvInsertInFieldVar}() != null) {
			for(#{rvInputType} item : #{rvInputVariable}.get#{rvInsertInFieldVar}()) {
				/** ### Execute Insert ### */
				insertCount = insertCount + #{rvInsertExecuteCode}
			}
		}
		logger.debug("- #{rvMethodName} insert count: {}", insertCount);

#{rvBizCode}
		/** ### Caller Output Setting ### */
#{rvCellerOutputSetting}
		
		cudCount = deleteCount + updateCount + insertCount;
		logger.debug("[END] #{rvMethodName} cru-transactionCount: {}", cudCount);
		return #{rvOutputVariable};
	}